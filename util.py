from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
import socket
import asyncio

# Define categories
CATEGORIES = [
    "–ü–∏—Ç–∞–Ω–∏–µ", "–ü–æ–¥–∞—Ä–∫–∏", "–ó–¥–æ—Ä–æ–≤—å–µ/–º–µ–¥–∏—Ü–∏–Ω–∞/–≥–∏–≥–∏–µ–Ω–∞", 
    "–î–æ–º/–ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ", "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "–õ–∏—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã", 
    "–î–æ–º–∞—à–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ", "–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", 
    "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏", "–¢–µ—Ö–Ω–∏–∫–∞", "–ö–∞—Ñ–µ/—Ä–µ—Å—Ç–æ—Ä–∞–Ω/–¥–æ—Å—Ç–∞–≤–∫–∞", 
    "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "–û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å", "–°–≤—è–∑—å –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç", 
    "–•–æ–±–±–∏/–∏–≥—Ä—ã", "–°–ø–æ—Ä—Ç", "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"
]

def new_transaction_markup():
    # Main menu markup
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text='–ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è')]
        ], 
        resize_keyboard=True, 
        input_field_placeholder='–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é?'
    )

def category_menu_markup():
    # Categories menu markup
    builder = InlineKeyboardBuilder()
    # Arrange categories in a grid-like structure
    for category in CATEGORIES:
        builder.button(
            text=category, 
            callback_data=f"category:{category}"
        )

    # Adjust the keyboard layout 
    builder.adjust(3)  # 3 buttons per row

    return builder.as_markup()

def process_category_markup():
    # Create inline keyboard with additional option
    builder = InlineKeyboardBuilder()
    
    # Original categories from the previous selection
    builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="confirm_category")
    builder.button(text="üîÑ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="change_category")

    return builder.as_markup()

def submit_transaction_markup():
    # Create inline keyboard with additional option
    builder = InlineKeyboardBuilder()
    
    # Original categories from the previous selection
    builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é", callback_data="confirm_transaction")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é", callback_data="decline_transaction")

    return builder.as_markup()

async def remove_chat_buttons(message: Message, 
                              msg_text: str = r"Loading\.\.\.",):
    msg = await message.reply(msg_text,
            reply_markup=ReplyKeyboardRemove(),
            parse_mode="MarkdownV2")
    
    await msg.delete()

async def keep_socket_open():
    """Function that keeps socket open."""
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    
    host = "0.0.0.0"  # wait on all interfaces
    port = 8080       # available port
    
    server_socket.bind((host, port))
    server_socket.listen(5)
    
    while True:
        await asyncio.sleep(3600)  # Keep socket open
